[
["walkthrough-example-building-the-lm-operator.html", "Chapter 6 Walkthrough example: building the lm operator Setting up the project Coding the operator Testing the operator locally Documenting Deploying the operator", " Chapter 6 Walkthrough example: building the lm operator Here we will learn through a concrete example how to create an R operator to perform a linear regression. Setting up the project 1. Designing the operator The first step is to define our input projection and outut relation. Remember: “Table in, Table out!” Here we want to perform the linear regression of y against x in a cell. Our input is simple. As a starting point, we will output the interecept and the slope of the model. 2. Cloning the template repository Get the template from GitHub. In RStudio server, File &gt; New project &gt; Version control. URL: https://github.com/tercen/templateR_operator Then, I have a new project at the root of my working directory. 3. Resetting versioning and packrat Rename the files. Reset the versioning and packrat. Coding the operator Coming soon. How an operator looks like Code description library(tercen) library(dplyr) do.lm &lt;- function(df) { out &lt;- data.frame( .ri = df$.ri[1], .ci = df$.ci[1], intercept = NaN, slope = NaN, fit.y = rep(NaN, 2), fit.x = rep(NaN, 2) ) mod &lt;- try(lm(.y ~ .x, data = df)) if(!inherits(mod, &#39;try-error&#39;)) { out$intercept &lt;- mod$coefficients[1] out$slope &lt;- mod$coefficients[2] out$fit.y &lt;- range(mod$fitted.values) out$fit.x &lt;- range(df$.x) } return(out) } (ctx &lt;- tercenCtx()) %&gt;% select(.x, .y, .ri, .ci) %&gt;% group_by(.ri, .ci) %&gt;% do(do.lm(.)) %&gt;% ctx$addNamespace() %&gt;% ctx$save() Testing the operator locally Coming soon. Documenting Edit the README.md to describe the operator design and usage. Deploying the operator main.R Coming soon. Init packrat Coming soon. Create and push repository Coming soon. Notify community Coming soon. "]
]
